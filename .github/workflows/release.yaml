name: release

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/reusable-**"
    tags:
      - '*'

  pull_request:
    paths:
      - ".github/workflows/reusable-**"
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  workflows-to-release:
    runs-on: ubuntu-latest
    outputs:
      names: ${{ steps.changed-workflows.outputs.values }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Get changed workflows ounder /workflows
        id: changed-workflows
        run: |
          changed_workflows=$(echo "${{ steps.changed-files.outputs.all_modified_files }}" \
          | tr " " "\n" | sed '/^\.github\/workflows\/reusable-/!d' \
          | sed 's/^\.github\/workflows\/reusable-//g;s/\.yaml//g' \
          | sort -u | jq -R . | jq -s .)
    
          # Extract action directory names without considering individual files
          changed_actions=$(echo "${{ steps.changed-files.outputs.all_modified_files }}" \
          | tr " " "\n" | sed '/^\.github\/actions\//!d' \
          | sed 's/^\.github\/actions\///g' | awk -F'/' '{print $1}' \
          | sort -u | jq -R . | jq -s .)
    
          changed='[]'  # Default to an empty JSON array
          if [ "$changed_workflows" != '[]' ] && [ "$changed_actions" != '[]' ]; then
            changed=$(jq -n --argjson workflows "$changed_workflows" --argjson actions "$changed_actions" '$workflows + $actions')
           elif [ "$changed_workflows" != '[]' ]; then
             changed=$changed_workflows
           elif [ "$changed_actions" != '[]' ]; then
             changed=$changed_actions
           fi
          
          # Trim any leading/trailing spaces or newlines from the final result
          trimmed_changed=$(echo "$changed" | jq -c .)

          echo "Changed Workflows: $trimmed_changed"
          echo "values=$trimmed_changed" >> $GITHUB_OUTPUT
                 
  release:
    runs-on: ubuntu-latest
    if: ${{ needs.workflows-to-release.outputs.names != '[]' }}
    needs: [workflows-to-release]
    strategy:
      fail-fast: false
      matrix: 
        workflows: ${{ fromJson(needs.workflows-to-release.outputs.names) }}
    steps:
      - uses: actions/checkout@v4

      - name: Get bump version from PR labels
        id: bump_label
        uses: SamirMarin/get-labels-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          label_key: bump
          label_value_order: "patch,minor,major,ignore"
          default_label_value: patch

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          fetch_all_tags: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ steps.bump_label.outputs.label_value }}
          tag_prefix: ${{ matrix.workflows }}-v
          dry_run: false #${{ github.event_name == 'pull_request' }}

      - name: Create major version tag value
        id: major_tag_version
        run: |
          major_version=$(echo ${{ steps.tag_version.outputs.new_tag }} | cut -d "." -f 1)
          echo "value=${major_version}" >> $GITHUB_OUTPUT

      - name: Override or push major tag
        if: ${{ github.event_name != 'pull_request' }}
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.major_tag_version.outputs.value }}
          force_push_tag: true

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **The current major Release:** ðŸš€ ${{ steps.major_tag_version.outputs.value }}
            **Next Release:** ðŸš€ ${{ steps.tag_version.outputs.new_tag }}

      - name: Create or update major GitHub release
        uses: ncipollo/release-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          tag: ${{ steps.major_tag_version.outputs.value }}
          name: Major Release ${{ steps.major_tag_version.outputs.value }}
          body: ${{ steps.tag_version.outputs.changelog }}
          allowUpdates: true
          replacesArtifacts: true

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}